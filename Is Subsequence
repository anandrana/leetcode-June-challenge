class Solution:
    def isSubsequence(self, s: str, t: str) -> bool:
        if(len(s)==0):
            return True
        if(s==t):
            return True
        
        dp=[[None for i in range(len(s)+1)]for j in range(len(t)+1)]
        
        for i in range(len(t)+1):
            for j in range(len(s)+1):
                if(i==0 or j==0):
                    dp[i][j]=0
                elif(s[j-1]==t[i-1]):
                    dp[i][j]=1+dp[i-1][j-1]
                else:
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1])
        x=dp[len(t)][len(s)]
        # print(dp)
        
        if(x==len(s)):
            return True
        else:
            return False
        
