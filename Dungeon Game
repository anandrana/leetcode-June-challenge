class Solution:
    def calculateMinimumHP(self, dungeon: List[List[int]]) -> int:
        n=len(dungeon)
        m=len(dungeon[0])
        if(dungeon[n-1][m-1]>=0):
            x=1
        else:
            x=abs(dungeon[n-1][m-1])
            x=x+1
            
        dp=[[0 for i in range(m)]for j in range(n)]
        # dp[n-1][m-1]=x
        
        for i in range(n-1,-1,-1):
            for j in range(m-1,-1,-1):
                if(i==n-1 and j==m-1):
                    dp[i][j]=x
                    
                elif(i==n-1 and j!=m-1):
                    if(dungeon[i][j]>=dp[i][j+1]):
                        dp[i][j]=1
                    else:
                        dp[i][j]=dp[i][j+1]-dungeon[i][j]
                elif(i!=n-1 and j==m-1):
                    if(dungeon[i][j]>=dp[i+1][j]):
                        dp[i][j]=1
                    else:
                        dp[i][j]=dp[i+1][j]-dungeon[i][j]
                else:
                    if(dp[i][j+1]<dp[i+1][j]):
                        if(dungeon[i][j]>=dp[i][j+1]):
                            dp[i][j]=1
                        else:
                            dp[i][j]=dp[i][j+1]-dungeon[i][j]
                    else:
                        if(dungeon[i][j]>=dp[i+1][j]):
                            dp[i][j]=1
                        else:
                            dp[i][j]=dp[i+1][j]-dungeon[i][j]
        
        return dp[0][0]
        
