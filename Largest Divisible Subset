class Solution:
    def largestDivisibleSubset(self, nums: List[int]) -> List[int]:
        max_sub=[]
        nums.sort()
        for i in range(len(nums)-1,-1,-1):
            list1=[]
            list1.append(nums[i])
            j=i-1
            while(j>=0):
                if(nums[i]%nums[j]==0 and (list1[-1]%nums[j]==0 or nums[j]%list1[-1]==0)):
                    list1.append(nums[j])
                j-=1
            if(len(list1)>len(max_sub)):
                max_sub=list1[:]
        max_sub.reverse()
        
        max_sub1=[]
        for i in range(len(nums)):
            list1=[]
            list1.append(nums[i])
            j=i+1
            while(j<len(nums)):
                if(nums[j]%nums[i]==0 and (list1[-1]%nums[j]==0 or nums[j]%list1[-1]==0)):
                    list1.append(nums[j])
                j+=1
            if(len(list1)>len(max_sub1)):
                max_sub1=list1[:]
        
        if(len(max_sub1)>len(max_sub)):
            return max_sub1
        return max_sub
    
            
        
